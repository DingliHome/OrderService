//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleHost.ServiceAPI {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceAPI.IOrderService")]
    public interface IOrderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddCustomer", ReplyAction="http://tempuri.org/IOrderService/AddCustomerResponse")]
        void AddCustomer(WebHost.Models.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOrderService/AddCustomer", ReplyAction="http://tempuri.org/IOrderService/AddCustomerResponse")]
        System.IAsyncResult BeginAddCustomer(WebHost.Models.Customer customer, System.AsyncCallback callback, object asyncState);
        
        void EndAddCustomer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetCustomers", ReplyAction="http://tempuri.org/IOrderService/GetCustomersResponse")]
        System.Collections.Generic.List<WebHost.Models.Customer> GetCustomers();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOrderService/GetCustomers", ReplyAction="http://tempuri.org/IOrderService/GetCustomersResponse")]
        System.IAsyncResult BeginGetCustomers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WebHost.Models.Customer> EndGetCustomers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/DeleteCustomer", ReplyAction="http://tempuri.org/IOrderService/DeleteCustomerResponse")]
        void DeleteCustomer(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOrderService/DeleteCustomer", ReplyAction="http://tempuri.org/IOrderService/DeleteCustomerResponse")]
        System.IAsyncResult BeginDeleteCustomer(System.Guid id, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteCustomer(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderServiceChannel : ConsoleHost.ServiceAPI.IOrderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WebHost.Models.Customer> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WebHost.Models.Customer>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderServiceClient : System.ServiceModel.ClientBase<ConsoleHost.ServiceAPI.IOrderService>, ConsoleHost.ServiceAPI.IOrderService {
        
        private BeginOperationDelegate onBeginAddCustomerDelegate;
        
        private EndOperationDelegate onEndAddCustomerDelegate;
        
        private System.Threading.SendOrPostCallback onAddCustomerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomersDelegate;
        
        private EndOperationDelegate onEndGetCustomersDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomersCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteCustomerDelegate;
        
        private EndOperationDelegate onEndDeleteCustomerDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteCustomerCompletedDelegate;
        
        public OrderServiceClient() {
        }
        
        public OrderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddCustomerCompleted;
        
        public event System.EventHandler<GetCustomersCompletedEventArgs> GetCustomersCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteCustomerCompleted;
        
        public void AddCustomer(WebHost.Models.Customer customer) {
            base.Channel.AddCustomer(customer);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddCustomer(WebHost.Models.Customer customer, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddCustomer(customer, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddCustomer(System.IAsyncResult result) {
            base.Channel.EndAddCustomer(result);
        }
        
        private System.IAsyncResult OnBeginAddCustomer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WebHost.Models.Customer customer = ((WebHost.Models.Customer)(inValues[0]));
            return this.BeginAddCustomer(customer, callback, asyncState);
        }
        
        private object[] OnEndAddCustomer(System.IAsyncResult result) {
            this.EndAddCustomer(result);
            return null;
        }
        
        private void OnAddCustomerCompleted(object state) {
            if ((this.AddCustomerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddCustomerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddCustomerAsync(WebHost.Models.Customer customer) {
            this.AddCustomerAsync(customer, null);
        }
        
        public void AddCustomerAsync(WebHost.Models.Customer customer, object userState) {
            if ((this.onBeginAddCustomerDelegate == null)) {
                this.onBeginAddCustomerDelegate = new BeginOperationDelegate(this.OnBeginAddCustomer);
            }
            if ((this.onEndAddCustomerDelegate == null)) {
                this.onEndAddCustomerDelegate = new EndOperationDelegate(this.OnEndAddCustomer);
            }
            if ((this.onAddCustomerCompletedDelegate == null)) {
                this.onAddCustomerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddCustomerCompleted);
            }
            base.InvokeAsync(this.onBeginAddCustomerDelegate, new object[] {
                        customer}, this.onEndAddCustomerDelegate, this.onAddCustomerCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<WebHost.Models.Customer> GetCustomers() {
            return base.Channel.GetCustomers();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<WebHost.Models.Customer> EndGetCustomers(System.IAsyncResult result) {
            return base.Channel.EndGetCustomers(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCustomers(callback, asyncState);
        }
        
        private object[] OnEndGetCustomers(System.IAsyncResult result) {
            System.Collections.Generic.List<WebHost.Models.Customer> retVal = this.EndGetCustomers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomersCompleted(object state) {
            if ((this.GetCustomersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomersCompleted(this, new GetCustomersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomersAsync() {
            this.GetCustomersAsync(null);
        }
        
        public void GetCustomersAsync(object userState) {
            if ((this.onBeginGetCustomersDelegate == null)) {
                this.onBeginGetCustomersDelegate = new BeginOperationDelegate(this.OnBeginGetCustomers);
            }
            if ((this.onEndGetCustomersDelegate == null)) {
                this.onEndGetCustomersDelegate = new EndOperationDelegate(this.OnEndGetCustomers);
            }
            if ((this.onGetCustomersCompletedDelegate == null)) {
                this.onGetCustomersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomersCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomersDelegate, null, this.onEndGetCustomersDelegate, this.onGetCustomersCompletedDelegate, userState);
        }
        
        public void DeleteCustomer(System.Guid id) {
            base.Channel.DeleteCustomer(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteCustomer(System.Guid id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteCustomer(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteCustomer(System.IAsyncResult result) {
            base.Channel.EndDeleteCustomer(result);
        }
        
        private System.IAsyncResult OnBeginDeleteCustomer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid id = ((System.Guid)(inValues[0]));
            return this.BeginDeleteCustomer(id, callback, asyncState);
        }
        
        private object[] OnEndDeleteCustomer(System.IAsyncResult result) {
            this.EndDeleteCustomer(result);
            return null;
        }
        
        private void OnDeleteCustomerCompleted(object state) {
            if ((this.DeleteCustomerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteCustomerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteCustomerAsync(System.Guid id) {
            this.DeleteCustomerAsync(id, null);
        }
        
        public void DeleteCustomerAsync(System.Guid id, object userState) {
            if ((this.onBeginDeleteCustomerDelegate == null)) {
                this.onBeginDeleteCustomerDelegate = new BeginOperationDelegate(this.OnBeginDeleteCustomer);
            }
            if ((this.onEndDeleteCustomerDelegate == null)) {
                this.onEndDeleteCustomerDelegate = new EndOperationDelegate(this.OnEndDeleteCustomer);
            }
            if ((this.onDeleteCustomerCompletedDelegate == null)) {
                this.onDeleteCustomerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCustomerCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteCustomerDelegate, new object[] {
                        id}, this.onEndDeleteCustomerDelegate, this.onDeleteCustomerCompletedDelegate, userState);
        }
    }
}
